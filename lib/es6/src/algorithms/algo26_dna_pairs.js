// Generated by BUCKLESCRIPT VERSION 1.7.1, PLEASE EDIT WITH CARE
'use strict';

import * as Caml_string     from "bs-platform/lib/es6/caml_string.js";
import * as Caml_exceptions from "bs-platform/lib/es6/caml_exceptions.js";

var NotDNA = Caml_exceptions.create("Algo26_dna_pairs.NotDNA");

function compute(dnaStr) {
  var _i = dnaStr.length - 1 | 0;
  var _acc = /* [] */0;
  while(true) {
    var acc = _acc;
    var i = _i;
    if (i < 0) {
      return acc;
    } else {
      var match = Caml_string.get(dnaStr, i);
      if (match >= 72) {
        if (match !== 84) {
          throw [
                NotDNA,
                "invalid strand, non-dna code detected"
              ];
        } else {
          _acc = /* :: */[
            /* :: */[
              /* "T" */84,
              /* :: */[
                /* "A" */65,
                /* [] */0
              ]
            ],
            acc
          ];
          _i = i - 1 | 0;
          continue ;
          
        }
      } else if (match >= 65) {
        switch (match - 65 | 0) {
          case 0 : 
              _acc = /* :: */[
                /* :: */[
                  /* "A" */65,
                  /* :: */[
                    /* "T" */84,
                    /* [] */0
                  ]
                ],
                acc
              ];
              _i = i - 1 | 0;
              continue ;
              case 2 : 
              _acc = /* :: */[
                /* :: */[
                  /* "C" */67,
                  /* :: */[
                    /* "G" */71,
                    /* [] */0
                  ]
                ],
                acc
              ];
              _i = i - 1 | 0;
              continue ;
              case 1 : 
          case 3 : 
          case 4 : 
          case 5 : 
              throw [
                    NotDNA,
                    "invalid strand, non-dna code detected"
                  ];
          case 6 : 
              _acc = /* :: */[
                /* :: */[
                  /* "G" */71,
                  /* :: */[
                    /* "C" */67,
                    /* [] */0
                  ]
                ],
                acc
              ];
              _i = i - 1 | 0;
              continue ;
              
        }
      } else {
        throw [
              NotDNA,
              "invalid strand, non-dna code detected"
            ];
      }
    }
  };
}

export {
  NotDNA  ,
  compute ,
  
}
/* No side effect */
