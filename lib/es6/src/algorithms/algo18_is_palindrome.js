// Generated by BUCKLESCRIPT VERSION 1.7.1, PLEASE EDIT WITH CARE
'use strict';

import * as $$String    from "bs-platform/lib/es6/string.js";
import * as Caml_string from "bs-platform/lib/es6/caml_string.js";

function isValidAsciiChar(c) {
  if (c >= 48 && c <= 57) {
    return /* true */1;
  } else if (c >= 97) {
    return +(c <= 122);
  } else {
    return /* false */0;
  }
}

function isIgnorableAsciiChar(c) {
  return 1 - isValidAsciiChar(c);
}

function isAsciiPalindrome(string) {
  var lcString = $$String.lowercase(string);
  var _param = /* tuple */[
    0,
    string.length - 1 | 0
  ];
  while(true) {
    var param = _param;
    var endIndex = param[1];
    var startIndex = param[0];
    if (startIndex >= endIndex) {
      return /* true */1;
    } else if (isValidAsciiChar(Caml_string.get(lcString, startIndex))) {
      if (isValidAsciiChar(Caml_string.get(lcString, endIndex))) {
        if (Caml_string.get(lcString, startIndex) !== Caml_string.get(lcString, endIndex)) {
          return /* false */0;
        } else {
          _param = /* tuple */[
            startIndex + 1 | 0,
            endIndex - 1 | 0
          ];
          continue ;
          
        }
      } else {
        _param = /* tuple */[
          startIndex,
          endIndex - 1 | 0
        ];
        continue ;
        
      }
    } else {
      _param = /* tuple */[
        startIndex + 1 | 0,
        endIndex
      ];
      continue ;
      
    }
  };
}

export {
  isValidAsciiChar     ,
  isIgnorableAsciiChar ,
  isAsciiPalindrome    ,
  
}
/* No side effect */
